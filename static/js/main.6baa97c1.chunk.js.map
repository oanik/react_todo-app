{"version":3,"sources":["utils/constants.jsx","utils/api.jsx","utils/LoadingErrorContext.jsx","utils/TodosContext.jsx","utils/customHooks.jsx","components/TodoApp/TodoApp.jsx","components/NotFoundPage/NotFoundPage.jsx","components/MainStatusControl/MainStatusControl.jsx","utils/helpers.jsx","components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/TodosFilter/TodosFilter.jsx","App.js","index.js"],"names":["FILTERS","BASE_URL","request","url","options","fetch","then","response","ok","Error","status","statusText","json","result","data","requestAll","post","method","headers","body","JSON","stringify","patch","createTodo","title","userId","completed","deleteTodo","todoId","deleteAllTodos","todos","requests","map","todo","id","Promise","all","responses","reply","updateTodo","todoID","Object","keys","updateAllTodos","LoadingErrorConext","React","createContext","isLoadingError","setLoadingError","LoadingErrorProvider","children","useState","contextError","useMemo","Provider","value","TodosContext","setTodos","TodosProvider","initValue","setValue","useContext","loadData","a","listOfTodos","filteredTodosServer","filter","useEffect","useLocalStorage","contextValue","TodoApp","memo","userName","setTitle","isPostedErr","setIsPostedErr","postTodo","prev","className","type","placeholder","onChange","event","target","onKeyDown","key","preventDefault","trim","Date","defaultProps","NotFoundPage","MainStatusControl","isCompleted","length","every","toggleAll","handleToggleAll","useCallback","newTodos","classNames","checked","htmlFor","TodoItem","onCompletedTodos","onRemoveTodo","onTitleChange","isEditing","setEdit","newValue","setNewValue","handleKeyDown","e","editing","onDoubleClick","currentState","onBlur","handleBlur","onClick","TodoList","pathname","useLocation","onCompleteTodos","todosModified","filteredTodo","TodosFilter","leftTodos","getNotCompleted","activeClassName","to","exact","notCompletedTodos","completedTodos","App","setUserName","name","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6baa97c1.chunk.js","sourcesContent":["export const FILTERS = {\n  all: 'All',\n  active: 'Active',\n  completed: 'Completed',\n};\n\nexport const ClearCompleted = 'Clear completed';\nexport const BASE_URL = 'https://mate-api.herokuapp.com';\nexport const userId = 1178;\nexport const errorText = 'Server Error';\nexport const errorTextPost = 'Error! Todo is not posted!';\n","import { BASE_URL, userId } from './constants';\n\nconst request = (url, options) => fetch(`${BASE_URL}${url}`, options)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  })\n  .then(result => result.data);\nconst requestAll = (url, options) => fetch(`${BASE_URL}${url}`, options);\n\nconst post = (url, data) => request(url, {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify(data),\n});\nconst remove = url => request(url, { method: 'DELETE' });\nconst removeAll = url => requestAll(url, { method: 'DELETE' });\n\nconst patch = (url, data) => request(url, {\n  method: 'PATCH',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify(data),\n});\nconst patchAll = (url, data) => requestAll(url, {\n  method: 'PATCH',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify(data),\n});\n\nexport const createUser = name => post('/users', {\n  name,\n  username: 'oanik',\n  email: 'mate@example.com',\n  phone: '1234567890',\n})\n  .then(response => response.json());\nexport const createTodo = title => post('/todos', {\n  userId,\n  title,\n  completed: false,\n});\n\nexport const getUser = id => request(`/users/${id}`);\nexport const getTodos = () => request('/todos');\n\nexport const deleteTodo = todoId => remove(`/todos/${todoId}`);\nexport const deleteAllTodos = (todos) => {\n  const requests = todos.map(todo => removeAll(`/todos/${todo.id}`));\n\n  Promise.all(requests)\n    .then(responses => Promise.all(responses.map(reply => reply.json())));\n};\n\n// eslint-disable-next-line consistent-return\nexport const updateTodo = (todoID, todo) => {\n  const key = Object.keys(todo);\n\n  switch (key[0]) {\n    case 'title': {\n      return patch(`/todos/${todoID}`, { title: todo.title });\n    }\n\n    case 'completed': {\n      return patch(`/todos/${todoID}`, { completed: todo.completed });\n    }\n\n    default: {\n      break;\n    }\n  }\n};\n\nexport const updateAllTodos = (todos) => {\n  const requests = todos.map(todo => patchAll(`/todos/${todo.id}`,\n    { completed: todo.completed }));\n\n  Promise.all(requests)\n    .then(responses => Promise.all(responses.map(reply => reply.json())));\n};\n","import React, { useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const LoadingErrorConext = React.createContext({\n  isLoadingError: false,\n  setLoadingError: () => {},\n});\n\nexport const LoadingErrorProvider = ({ children }) => {\n  const [isLoadingError, setLoadingError] = useState(false);\n\n  const contextError = useMemo(() => ({\n    isLoadingError,\n    setLoadingError,\n  }), [isLoadingError]);\n\n  return (\n    <LoadingErrorConext.Provider value={contextError}>\n      {children}\n    </LoadingErrorConext.Provider>\n  );\n};\n\nLoadingErrorProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocalStorage } from './customHooks';\n\nexport const TodosContext = React.createContext({\n  todos: [],\n  setTodos: () => {},\n});\n\nexport const TodosProvider = ({ children }) => {\n  const [todos, setTodos] = useLocalStorage([]);\n\n  const contextValue = useMemo(() => ({\n    todos,\n    setTodos,\n  }), [todos]);\n\n  return (\n    <TodosContext.Provider value={contextValue}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n\nTodosProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { useState, useEffect, useContext } from 'react';\nimport { getTodos } from './api';\nimport { userId } from './constants';\nimport { LoadingErrorConext } from './LoadingErrorContext';\n\nexport const useLocalStorage = (initValue) => {\n  const [value, setValue] = useState(initValue);\n  const { setLoadingError } = useContext(LoadingErrorConext);\n\n  const loadData = async() => {\n    setLoadingError(false);\n    try {\n      const listOfTodos = await getTodos();\n      const filteredTodosServer = listOfTodos.filter(\n        todo => todo.userId === userId,\n      );\n\n      setValue(filteredTodosServer);\n    } catch (error) {\n      setLoadingError(true);\n    }\n  };\n\n  const save = (todos) => {\n    setValue(todos);\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return [value, save];\n};\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TodosContext } from '../../utils/TodosContext';\nimport { createTodo } from '../../utils/api';\nimport { errorTextPost } from '../../utils/constants';\n\nexport const TodoApp = React.memo(({ userName }) => {\n  const [title, setTitle] = useState('');\n  const [isPostedErr, setIsPostedErr] = useState(false);\n  const { setTodos } = useContext(TodosContext);\n\n  const postTodo = async(todo) => {\n    setIsPostedErr(false);\n    try {\n      const result = await createTodo(todo.title);\n\n      setTodos(prev => [...prev, { ...todo, id: result.id }]);\n    } catch (error) {\n      setIsPostedErr(true);\n    }\n  };\n\n  const handleOnSubmit = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n\n      if (!title.trim()) {\n        return;\n      }\n\n      postTodo({\n        id: +new Date(),\n        title,\n        completed: false,\n      });\n      setTitle('');\n    }\n  };\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n      {userName && (\n        <span className=\"signature\">{userName}</span>\n      )}\n      {isPostedErr && (\n        <span className=\"posted\">{errorTextPost}</span>\n      )}\n      <form>\n        <input\n          type=\"text\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={title}\n          onChange={(event) => {\n            setIsPostedErr(false);\n            setTitle(event.target.value);\n          }}\n          onKeyDown={handleOnSubmit}\n        />\n      </form>\n    </header>\n  );\n});\n\nTodoApp.defaultProps = {\n  userName: '',\n};\n\nTodoApp.propTypes = {\n  userName: PropTypes.string,\n};\n","import React from 'react';\nimport { errorText } from '../../utils/constants';\n\nexport const NotFoundPage = () => (\n  <p>{errorText}</p>\n);\n","import React, { useContext, useCallback, useMemo } from 'react';\n\nimport classNames from 'classnames';\nimport { TodosContext } from '../../utils/TodosContext';\nimport { toggleAll } from '../../utils/helpers';\nimport { updateAllTodos } from '../../utils/api';\n\nexport const MainStatusControl = React.memo(() => {\n  const { todos, setTodos } = useContext(TodosContext);\n\n  const isCompleted = useMemo(() => toggleAll(todos), [todos]);\n  const handleToggleAll = useCallback((status) => {\n    const newTodos = todos.map(todo => ({ ...todo, completed: !status }));\n\n    setTodos(newTodos);\n    updateAllTodos(newTodos);\n  }, [todos, setTodos]);\n\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className={classNames('toggle-all')}\n        checked={isCompleted}\n        onChange={() => handleToggleAll(isCompleted)}\n      />\n      <label\n        htmlFor=\"toggle-all\"\n      >\n        Mark all as complete\n      </label>\n    </>\n  );\n});\n","export const getNotCompleted = todos => ((todos.length)\n  ? todos.filter(todo => todo.completed === false).length\n  : 0);\n\nexport const toggleAll = todos => ((!todos.length)\n  ? false\n  : todos.every(todo => todo.completed));\n","import React, { useCallback, useState } from 'react';\n\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { updateTodo } from '../../utils/api';\n\nexport const TodoItem = React.memo(({ id, title,\n  completed, onCompletedTodos, onRemoveTodo, onTitleChange }) => {\n  const [isEditing, setEdit] = useState(false);\n  const [newValue, setNewValue] = useState(title);\n\n  const handleBlur = ({ value }) => {\n    onTitleChange(value, id);\n    updateTodo(id, { title: value });\n    setEdit(false);\n  };\n\n  const handleKeyDown = useCallback((e) => {\n    switch (e.key) {\n      case 'Enter': {\n        const { value } = e.target;\n\n        onTitleChange(value, id);\n        updateTodo(id, { title: value });\n        setEdit(false);\n        break;\n      }\n\n      case 'Escape': {\n        setEdit(false);\n        break;\n      }\n\n      default: {\n        break;\n      }\n    }\n  }, [isEditing]);\n\n  return (\n    <li\n      key={id}\n      className={classNames({ completed, editing: isEditing })}\n      onDoubleClick={() => setEdit(currentState => !currentState)}\n      onBlur={e => handleBlur(e.target)}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={completed}\n          onChange={e => onCompletedTodos(e, id)}\n        />\n        <label>\n          {title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => onRemoveTodo(id)}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={newValue}\n        onChange={e => setNewValue(e.target.value)}\n        onKeyDown={e => handleKeyDown(e)}\n      />\n    </li>\n  );\n});\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  onCompletedTodos: PropTypes.func.isRequired,\n  onRemoveTodo: PropTypes.func.isRequired,\n  onTitleChange: PropTypes.func.isRequired,\n};\n","import React, { useCallback, useContext, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { TodoItem } from '../TodoItem';\nimport { TodosContext } from '../../utils/TodosContext';\n\nimport { deleteTodo, updateTodo } from '../../utils/api';\n\nexport const TodoList = () => {\n  const { pathname } = useLocation();\n  const { todos, setTodos } = useContext(TodosContext);\n\n  const onCompleteTodos = useCallback((event, id) => {\n    const { checked } = event.target;\n    const todosModified = todos.map((todo) => {\n      if (todo.id !== id) {\n        return todo;\n      }\n\n      return { ...todo, completed: checked };\n    });\n\n    setTodos(todosModified);\n    updateTodo(id, { completed: checked });\n  }, [todos, setTodos]);\n\n  const onRemoveTodo = useCallback((id) => {\n    const todosModified = todos.filter(todo => todo.id !== id);\n\n    setTodos(todosModified);\n    deleteTodo(id);\n  }, [todos, setTodos]);\n\n  const filteredTodo = useMemo(() => {\n    switch (pathname) {\n      case '/': {\n        return todos;\n      }\n\n      case '/completed': {\n        return todos.filter(todo => todo.completed);\n      }\n\n      case '/active': {\n        return todos.filter(todo => !todo.completed);\n      }\n\n      default: {\n        return todos;\n      }\n    }\n  }, [todos, pathname]);\n\n  const onTitleChange = (value, id) => {\n    if (value) {\n      const todosModified = todos.map((todo) => {\n        if (todo.id !== id) {\n          return todo;\n        }\n\n        return { ...todo, title: value };\n      });\n\n      setTodos(todosModified);\n    }\n  };\n\n  if (!todos.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"todo-list\">\n      {filteredTodo.map(({ id, title, completed }) => (\n        <TodoItem\n          key={id}\n          id={id}\n          title={title}\n          completed={completed}\n          onCompletedTodos={onCompleteTodos}\n          onRemoveTodo={onRemoveTodo}\n          onTitleChange={onTitleChange}\n        />\n      ))}\n    </ul>\n  );\n};\n","import React, { useContext, useMemo } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { TodosContext } from '../../utils/TodosContext';\nimport { getNotCompleted } from '../../utils/helpers';\nimport { FILTERS, ClearCompleted } from '../../utils/constants';\nimport { deleteAllTodos } from '../../utils/api';\n\nexport const TodosFilter = React.memo(() => {\n  const { todos, setTodos } = useContext(TodosContext);\n\n  const leftTodos = useMemo(() => getNotCompleted(todos), [todos]);\n  const clearCompleted = () => {\n    const notCompletedTodos = todos.filter(todo => !todo.completed);\n    const completedTodos = todos.filter(todo => todo.completed);\n\n    setTodos(notCompletedTodos);\n    deleteAllTodos(completedTodos);\n  };\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${leftTodos} items left`}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <NavLink\n            activeClassName=\"selected\"\n            to=\"/active\"\n          >\n            {FILTERS.active}\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            activeClassName=\"selected\"\n            to=\"/completed\"\n          >\n            {FILTERS.completed}\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            activeClassName=\"selected\"\n            to=\"/\"\n            exact\n          >\n            {FILTERS.all}\n          </NavLink>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={clearCompleted}\n      >\n        {ClearCompleted}\n      </button>\n    </footer>\n  );\n});\n","import React, { useContext, useEffect, useState } from 'react';\n\nimport { TodoApp } from './components/TodoApp';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { MainStatusControl } from './components/MainStatusControl';\nimport { TodoList } from './components/TodoList';\nimport { TodosFilter } from './components/TodosFilter';\n\nimport { TodosContext } from './utils/TodosContext';\nimport { LoadingErrorConext } from './utils/LoadingErrorContext';\nimport { getUser } from './utils/api';\nimport { userId } from './utils/constants';\n\nconst App = () => {\n  const { todos } = useContext(TodosContext);\n  const { isLoadingError } = useContext(LoadingErrorConext);\n  const [userName, setUserName] = useState('');\n\n  const loadData = async() => {\n    const result = await getUser(userId);\n\n    setUserName(result.name);\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <section className=\"todoapp\">\n      <TodoApp\n        userName={userName}\n      />\n      {isLoadingError ? (\n        <NotFoundPage />\n      ) : (todos.length > 0 && (\n        <>\n          <section className=\"main\">\n            <MainStatusControl />\n            <TodoList />\n          </section>\n          <TodosFilter />\n        </>\n      ))\n    }\n    </section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { TodosProvider } from './utils/TodosContext';\nimport { LoadingErrorProvider } from './utils/LoadingErrorContext';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <LoadingErrorProvider>\n      <TodosProvider>\n        <App />\n      </TodosProvider>\n    </LoadingErrorProvider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}