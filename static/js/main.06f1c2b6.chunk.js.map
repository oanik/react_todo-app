{"version":3,"sources":["utils/TodosContext.jsx","utils/customHooks.jsx","components/TodoApp/TodoApp.jsx","components/MainStatusControl/MainStatusControl.jsx","utils/helpers.jsx","components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","utils/constants.jsx","components/TodosFilter/TodosFilter.jsx","App.js","index.js"],"names":["TodosContext","React","createContext","todos","setTodos","TodosProvider","children","key","initValue","useState","JSON","parse","localStorage","getItem","value","setValue","useEffect","setItem","stringify","useLocalStorage","contextValue","useMemo","Provider","TodoApp","memo","title","setTitle","useContext","className","type","placeholder","onChange","event","target","onKeyDown","preventDefault","trim","todo","id","Date","completed","prev","MainStatusControl","isCompleted","length","every","toggleAll","handleToggleAll","useCallback","status","newTodos","map","classNames","checked","htmlFor","TodoItem","onCompletedTodos","onRemoveTodo","onTitleChange","isEditing","setEdit","newValue","setNewValue","handleKeyDown","e","editing","onDoubleClick","currentState","onBlur","handleBlur","onClick","TodoList","pathname","useLocation","onCompleteTodos","todosModified","filter","filteredTodo","FILTERS","TodosFilter","leftTodos","getNotCompleted","clearCompleted","activeClassName","to","exact","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06f1c2b6.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocalStorage } from './customHooks';\n\nexport const TodosContext = React.createContext({\n  todos: [],\n  setTodos: () => {},\n});\n\nexport const TodosProvider = ({ children }) => {\n  const [todos, setTodos] = useLocalStorage('todos', []);\n\n  const contextValue = useMemo(() => ({\n    todos,\n    setTodos,\n  }), [todos]);\n\n  return (\n    <TodosContext.Provider value={contextValue}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n\nTodosProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { useState, useEffect } from 'react';\n\nexport const useLocalStorage = (key, initValue) => {\n  const [value, setValue] = useState(() => {\n    try {\n      return JSON.parse(localStorage.getItem(key)) || initValue;\n    } catch {\n      return initValue;\n    }\n  });\n  const save = (todos) => {\n    setValue(todos);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value]);\n\n  return [value, save];\n};\n","import React, { useState, useContext } from 'react';\nimport { TodosContext } from '../../utils/TodosContext';\n\nexport const TodoApp = React.memo(() => {\n  const [title, setTitle] = useState('');\n  const { setTodos } = useContext(TodosContext);\n\n  const addTodo = (todo) => {\n    setTodos(prev => [...prev, todo]);\n  };\n\n  const handleOnSubmit = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      if (!title.trim()) {\n        return;\n      }\n\n      addTodo({\n        id: +new Date(),\n        title,\n        completed: false,\n      });\n      setTitle('');\n    }\n  };\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n      <form>\n        <input\n          type=\"text\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={title}\n          onChange={event => setTitle(event.target.value)}\n          onKeyDown={handleOnSubmit}\n        />\n      </form>\n    </header>\n  );\n});\n","import React, { useContext, useCallback, useMemo } from 'react';\n\nimport classNames from 'classnames';\nimport { TodosContext } from '../../utils/TodosContext';\nimport { toggleAll } from '../../utils/helpers';\n\nexport const MainStatusControl = React.memo(() => {\n  const { todos, setTodos } = useContext(TodosContext);\n\n  const isCompleted = useMemo(() => toggleAll(todos), [todos]);\n  const handleToggleAll = useCallback((status) => {\n    const newTodos = todos.map(todo => ({ ...todo, completed: !status }));\n\n    setTodos(newTodos);\n  }, [todos]);\n\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className={classNames('toggle-all')}\n        checked={isCompleted}\n        onChange={() => handleToggleAll(isCompleted)}\n      />\n      <label\n        htmlFor=\"toggle-all\"\n      >\n        Mark all as complete\n      </label>\n    </>\n  );\n});\n","export const getNotCompleted = todos => ((todos.length)\n  ? todos.filter(todo => todo.completed === false).length\n  : 0);\n\nexport const toggleAll = todos => ((!todos.length)\n  ? false\n  : todos.every(todo => todo.completed));\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const TodoItem = React.memo(({ id, title,\n  completed, onCompletedTodos, onRemoveTodo, onTitleChange }) => {\n  const [isEditing, setEdit] = useState(false);\n  const [newValue, setNewValue] = useState(title);\n\n  const handleBlur = ({ value }) => {\n    onTitleChange(value, id);\n    setEdit(false);\n  };\n\n  const handleKeyDown = useCallback((e) => {\n    switch (e.key) {\n      case 'Enter': {\n        const { value } = e.target;\n\n        onTitleChange(value, id);\n        setEdit(false);\n        break;\n      }\n\n      case 'Escape': {\n        setEdit(false);\n        break;\n      }\n\n      default: {\n        break;\n      }\n    }\n  }, [isEditing]);\n\n  return (\n    <li\n      key={id}\n      className={classNames({ completed, editing: isEditing })}\n      onDoubleClick={() => setEdit(currentState => !currentState)}\n      onBlur={e => handleBlur(e.target.value)}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={completed}\n          onChange={e => onCompletedTodos(e, id)}\n        />\n        <label>\n          {title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => onRemoveTodo(id)}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={newValue}\n        onChange={e => setNewValue(e.target.value)}\n        onKeyDown={e => handleKeyDown(e)}\n      />\n    </li>\n  );\n});\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  onCompletedTodos: PropTypes.func.isRequired,\n  onRemoveTodo: PropTypes.func.isRequired,\n  onTitleChange: PropTypes.func.isRequired,\n};\n","import React, { useContext, useCallback, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { TodoItem } from '../TodoItem';\nimport { TodosContext } from '../../utils/TodosContext';\n\nexport const TodoList = () => {\n  const { pathname } = useLocation();\n  const { todos, setTodos } = useContext(TodosContext);\n\n  const onCompleteTodos = useCallback((event, id) => {\n    const { checked } = event.target;\n    const todosModified = todos.map((todo) => {\n      if (todo.id !== id) {\n        return todo;\n      }\n\n      return { ...todo, completed: checked };\n    });\n\n    setTodos(todosModified);\n  }, [todos, setTodos]);\n\n  const onRemoveTodo = useCallback((id) => {\n    const todosModified = todos.filter(todo => todo.id !== id);\n\n    setTodos(todosModified);\n  }, [todos, setTodos]);\n\n  const filteredTodo = useMemo(() => {\n    switch (pathname) {\n      case '/': {\n        return todos;\n      }\n\n      case '/completed': {\n        return todos.filter(todo => todo.completed);\n      }\n\n      case '/active': {\n        return todos.filter(todo => !todo.completed);\n      }\n\n      default: {\n        return todos;\n      }\n    }\n  }, [todos, pathname]);\n\n  const onTitleChange = (value, id) => {\n    if (value) {\n      const todosModified = todos.map((todo) => {\n        if (todo.id !== id) {\n          return todo;\n        }\n\n        return { ...todo, title: value };\n      });\n\n      setTodos(todosModified);\n    }\n  };\n\n  if (!todos.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"todo-list\">\n      {filteredTodo.map(({ id, title, completed }) => (\n        <TodoItem\n          key={id}\n          id={id}\n          title={title}\n          completed={completed}\n          onCompletedTodos={onCompleteTodos}\n          onRemoveTodo={onRemoveTodo}\n          onTitleChange={onTitleChange}\n        />\n      ))}\n    </ul>\n  );\n};\n","export const FILTERS = {\n  all: 'All',\n  active: 'Active',\n  completed: 'Completed',\n};\n\nexport const ClearCompleted = 'Clear completed';\n","import React, { useContext, useMemo, useCallback } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { TodosContext } from '../../utils/TodosContext';\nimport { getNotCompleted } from '../../utils/helpers';\nimport { FILTERS, ClearCompleted } from '../../utils/constants';\n\nexport const TodosFilter = React.memo(() => {\n  const { todos, setTodos } = useContext(TodosContext);\n\n  const leftTodos = useMemo(() => getNotCompleted(todos), [todos]);\n  const clearCompleted = useCallback(() => {\n    setTodos(todos.filter(todo => !todo.completed));\n  }, [todos]);\n\n  return (\n    <>\n      <span className=\"todo-count\">\n        {`${leftTodos} items left`}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <NavLink\n            activeClassName=\"selected\"\n            to=\"/active\"\n          >\n            {FILTERS.active}\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            activeClassName=\"selected\"\n            to=\"/completed\"\n          >\n            {FILTERS.completed}\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            activeClassName=\"selected\"\n            to=\"/\"\n            exact\n          >\n            {FILTERS.all}\n          </NavLink>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={clearCompleted}\n      >\n        {ClearCompleted}\n      </button>\n    </>\n  );\n});\n","import React, { useContext } from 'react';\n\nimport { TodoApp } from './components/TodoApp';\nimport { MainStatusControl } from './components/MainStatusControl';\nimport { TodoList } from './components/TodoList';\nimport { TodosFilter } from './components/TodosFilter';\n\nimport { TodosContext } from './utils/TodosContext';\n\nconst App = () => {\n  const { todos } = useContext(TodosContext);\n\n  return (\n    <section className=\"todoapp\">\n      <TodoApp />\n      {todos.length > 0 && (\n      <>\n        <section className=\"main\">\n          <MainStatusControl />\n          <TodoList />\n        </section>\n        <footer className=\"footer\">\n          <TodosFilter />\n        </footer>\n      </>\n      )}\n    </section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { TodosProvider } from './utils/TodosContext';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <TodosProvider>\n      <App />\n    </TodosProvider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}